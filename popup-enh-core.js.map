{"version":3,"file":"popup-enh-core.js","sources":["../src/popup-enh-core.ts"],"sourcesContent":["export type MoveStyleProps = \"top\" | \"left\";\nexport type MoveState = Record<MoveStyleProps, `${string}px`>;\n\nexport type ResizeStyleProps = \"width\" | \"height\";\nexport type ResizeState = Record<ResizeStyleProps, `${string}px`>;\n\nexport type AnyStyleProps = MoveStyleProps | ResizeStyleProps;\nexport type AnyState = MoveState | ResizeState;\n\nfunction assignStyleState(element: HTMLElement, state: AnyState) {\n    for (const [k, v] of Object.entries(state)) {\n        element.style[k as AnyStyleProps] = v;\n    }\n}\nfunction resetStyleState(element: HTMLElement, state: AnyState) {\n    Object.keys(state).forEach(k => element.style[k as AnyStyleProps] = \"\");\n}\n\n\nexport type MovableOpts = {\n    handle?: HTMLElement,\n    onMove?: (state: MoveState) => void,\n    onStop?: (state: MoveState) => void,\n    state?: MoveState,\n    reset?: Function,\n    position?: \"absolute\" | \"relative\";\n}\n\nexport function makeMovable(element: HTMLElement, {\n    handle, onMove, onStop, state, reset, position = \"absolute\"\n}: MovableOpts = {}) {\n    state && assignStyleState(element, state); // Restore position\n\n    const _handle = handle || element;\n    _handle.style.userSelect  = \"none\";\n    _handle.style.touchAction = \"none\";\n    element.style.position    = position;\n\n    _handle.addEventListener(\"pointerdown\", (event: PointerEvent) => {\n        event.preventDefault(); // To prevent bugs when all text on the page is selected (Ctrl + A)\n        _handle.setPointerCapture(event.pointerId); // To prevent a bug on double click\n        const offsetY = event.clientY - parseInt(getComputedStyle(element).top);\n        const offsetX = event.clientX - parseInt(getComputedStyle(element).left);\n\n        function _onMove(event: PointerEvent) {\n            !_handle.hasPointerCapture(event.pointerId) && _handle.setPointerCapture(event.pointerId);\n            state = {\n                top:  `${event.clientY - offsetY}px`,\n                left: `${event.clientX - offsetX}px`,\n            };\n            assignStyleState(element, state);\n            onMove?.(state);\n        }\n        function _onStop() {\n            removeEventListener(\"pointermove\", _onMove);\n            state && onStop?.(state);\n        }\n        addEventListener(\"pointermove\",        _onMove, {passive: true});\n        addEventListener(\"lostpointercapture\", _onStop, {once:    true});\n    });\n    return { reset: () => { state && resetStyleState(element, state); reset?.(); } };\n}\n\n\nexport type ResizableOpts = {\n    minW?: number,\n    minH?: number,\n    size?: number,\n    onMove?: (state: ResizeState) => void,\n    onStop?: (state: ResizeState) => void,\n    state?: ResizeState,\n    reset?: Function,\n}\n\nexport function makeResizable(element: HTMLElement, {\n    minW = 64, minH = 64, size = 16, onMove, onStop, state, reset\n}: ResizableOpts = {}) {\n    state && assignStyleState(element, state); // Restore size\n\n    const lrCorner = document.createElement(\"div\");\n    lrCorner.style.cssText =\n        `width: ${size}px; height: ${size}px; border-radius: ${(size / 2)}px; ` +\n        `bottom: ${-(size / 2)}px; right: ${-(size / 2)}px; ` +\n        `position: absolute; background-color: transparent; cursor: se-resize; touch-action: none;`;\n    element.append(lrCorner);\n\n    lrCorner.addEventListener(\"pointerdown\", event => {\n        event.preventDefault();\n        lrCorner.setPointerCapture(event.pointerId);\n        const offsetX = event.clientX - element.offsetLeft - parseInt(getComputedStyle(element).width);\n        const offsetY = event.clientY - element.offsetTop  - parseInt(getComputedStyle(element).height);\n\n        function _onMove(event: PointerEvent) {\n            let x = event.clientX - element.offsetLeft - offsetX;\n            let y = event.clientY - element.offsetTop  - offsetY;\n            if (x < minW) { x = minW; }\n            if (y < minH) { y = minH; }\n            state = {\n                width:  `${x}px`,\n                height: `${y}px`,\n            };\n            assignStyleState(element, state);\n            onMove?.(state);\n        }\n        function _onStop() {\n            lrCorner.removeEventListener(\"pointermove\", _onMove);\n            state && onStop?.(state);\n        }\n        lrCorner.addEventListener(\"pointermove\",        _onMove, {passive: true});\n        lrCorner.addEventListener(\"lostpointercapture\", _onStop, {once:    true});\n    });\n    return { reset: () => { state && resetStyleState(element, state); reset?.(); } };\n}\n"],"names":["event"],"mappings":"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"}